void	ft_nop_player(t_al *al, int i, double x, double y)
{
	int m[2];

	m[0] = 0;
	m[1] = 0;
	t_walls t;
	while (i < (int)al->sec[al->play.csec].nb_wal)
	{
		t = al->sec[al->play.csec].walls[i];
		if (x > 0.0 && (t.x1 > al->play.posx || t.x2 > al->play.posx)
			&& ((t.y1 < al->play.posy && al->play.posy < t.y2) || (t.y1 > al->play.posy && al->play.posy > t.y2)))
			(d_wall(t, al->ent) > 0.5) ? m[0] = 1 : 0;
		if (x < 0.0 && (t.x1 < al->play.posx || t.x2 < al->play.posx)
			&& ((t.y1 < al->play.posy && al->play.posy < t.y2) || (t.y1 > al->play.posy && al->play.posy > t.y2)))
			(d_wall(t, al->ent) > 0.5) ? m[0] = 1 : 0;
		if (y > 0.0 && (t.y1 > al->play.posy || t.y2 > al->play.posy)
			&& ((t.x1 < al->play.posx && al->play.posx < t.x2) || (t.x1 > al->play.posx && al->play.posx > t.x2)))
			(d_wall(t, al->ent) > 0.5) ? m[1] = 1 : 0;
		if (y < 0.0 && (t.y1 < al->play.posy || t.y2 < al->play.posy)
			&& ((t.x1 < al->play.posx && al->play.posx < t.x2) || (t.x1 > al->play.posx && al->play.posx > t.x2)))
			(d_wall(t, al->ent) > 0.5) ? m[1] = 1 : 0;
		i++;
	}
	(m[1]) ? al->play.posy += y : 0;
	(m[0]) ? al->play.posx += x : 0; 
}